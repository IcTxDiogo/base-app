services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      - IS_PRIMARY_APP=true
      - XDEBUG_MODE=off # Por padr√£o desabilitado para melhor performance
    extra_hosts:
      - 'host.docker.internal:host-gateway' # Para Xdebug conectar ao host
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - laravel

  nginx:
    image: nginx:1.25-alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

  postgres:
    image: postgres:16-alpine
    container_name: laravel-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - ./docker/postgres/create-test-db.sh:/docker-entrypoint-initdb.d/create-test-db.sh
      - pgdata:/var/lib/postgresql/data
    networks:
      - laravel
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: laravel-redis
    restart: unless-stopped
    networks:
      - laravel

  mailpit:
    image: axllent/mailpit
    container_name: laravel-mailpit
    restart: unless-stopped
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - laravel

  node:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    container_name: laravel-node
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    ports:
      - '5173:5173'
    networks:
      - laravel

  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: sh -c "while true; do php artisan schedule:run; sleep 60; done"
    depends_on:
      - app
    networks:
      - laravel

  horizon:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-horizon
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: php artisan horizon
    depends_on:
      - app
      - redis
    networks:
      - laravel

  reverb:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-reverb
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    ports:
      - '${REVERB_PORT:-8080}:8080'
    command: php artisan reverb:start --host=0.0.0.0 --port=8080
    depends_on:
      - app
    networks:
      - laravel

  dusk:
    image: selenium/standalone-chrome:latest
    container_name: laravel-dusk
    restart: unless-stopped
    shm_size: 2gb
    environment:
      - SE_NODE_MAX_SESSIONS=1
      - SE_SESSION_REQUEST_TIMEOUT=600
    networks:
      - laravel

# Rede
networks:
  laravel:
    driver: bridge

# Volumes
volumes:
  pgdata:
    driver: local
